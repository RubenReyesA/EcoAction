{"remainingRequest":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/VisionAIScannerPage.vue?vue&type=style&index=0&id=4317a0fd&lang=css","dependencies":[{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/VisionAIScannerPage.vue","mtime":1620562877655},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uL3N0eWxlcy9zdHlsZS5jc3MiOwo="},{"version":3,"sources":["/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/VisionAIScannerPage.vue"],"names":[],"mappings":";AA6LA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/VisionAIScannerPage.vue","sourceRoot":"","sourcesContent":["<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <IonButtons>\n          <ion-back-button :text=\"messages[idioma]['backText']\" />\n        </IonButtons>\n        <ion-title>{{ messages[idioma][\"visionAIScannerTitle\"] }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\" class=\"ion-padding\">\n      <ion-card>\n        <ion-card-header>\n          <ion-card-subtitle>Imagen capturada</ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n          <div class=\"container\">\n            <img :src=\"img\" style=\"height: 25vh\" />\n          </div>\n        </ion-card-content>\n      </ion-card>\n\n      <ion-card>\n        <ion-card-header>\n          <ion-card-subtitle\n            >Resultados del an√°lisis\n\n            <ion-icon\n              slot=\"icon-only\"\n              :icon=\"checkmarkCircleOutline\"\n            ></ion-icon>\n          </ion-card-subtitle>\n        </ion-card-header>\n        <ion-card-content>\n          <ion-grid>\n            <ion-row\n              class=\"residu6\"\n              v-for=\"(item, idx) in results\"\n              :key=\"item.residuID\"\n            >\n              <ion-col class=\"container\" style=\"max-width: 4rem\">\n                <p class=\"residu3 useSora\">{{ idx + 1 }}</p>\n              </ion-col>\n              <ion-col class=\"container\">\n                <img :src=\"item.img\" class=\"residu4\" />\n              </ion-col>\n              <ion-col class=\"container\">\n                <p class=\"residu5\">{{ item.title }}</p>\n                <p class=\"residu8\">{{ item.prob }}</p>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-card-content>\n      </ion-card>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonButtons,\n  IonBackButton,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardContent,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonIcon,\n} from \"@ionic/vue\";\nimport { defineComponent } from \"vue\";\nimport { NativeStorage } from \"@ionic-native/native-storage\";\n\nimport { checkmarkCircleOutline } from \"ionicons/icons\";\n\nimport { Camera } from \"@ionic-native/camera\";\nimport { FileTransfer } from \"@ionic-native/file-transfer\";\n\nexport default defineComponent({\n  name: \"VisionAIScannerPage\",\n  components: {\n    IonContent,\n    IonHeader,\n    IonPage,\n    IonTitle,\n    IonToolbar,\n    IonButtons,\n    IonBackButton,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardContent,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonIcon,\n  },\n  data: function () {\n    return {\n      messages: {\n        es: require(\"../../public/assets/i18n/es.json\"),\n        ca: require(\"../../public/assets/i18n/ca.json\"),\n        en: require(\"../../public/assets/i18n/en.json\"),\n      },\n      idioma: \"es\",\n      products: require(\"../../public/assets/products.json\"),\n      cameraOptions: {\n        quality: 100,\n        destinationType: Camera.DestinationType.FILE_URI,\n        sourceType: Camera.PictureSourceType.CAMERA,\n        mediaType: Camera.MediaType.PICTURE,\n        encodingType: Camera.EncodingType.JPEG,\n        correctOrientation: true, //Corrects Android orientation quirks\n      },\n      fileOptions: {\n        fileKey: \"myImage\",\n        fileName: \"file\",\n        mimeType: \"image/jpeg\",\n      },\n      img: null,\n      results: null,\n    };\n  },\n  mounted: function () {\n    NativeStorage.getItem(\"idioma\").then((x) => (this.idioma = x));\n\n    this.img =\n      \"http://192.168.1.41:3013/public/uploads/myImage-1620550619810.jpg\";\n\n    this.results = [\n      {\n        residuID: 2,\n        prob: 0.55,\n      },\n      {\n        residuID: 3,\n        prob: 0.45,\n      },\n    ];\n\n    for (let i = 0; i < this.results.length; i++) {\n      const id = this.results[i][\"residuID\"];\n      this.results[i][\"img\"] = require(\"../../public/assets/images/residus/\" +\n        id +\n        \"/\" +\n        id +\n        \"-1.jpg\");\n      this.results[i][\"title\"] = this.products[id][\"nameES\"];\n    }\n\n    //this.openCamera();\n  },\n  methods: {\n    openCamera: function () {\n      Camera.getPicture(this.cameraOptions)\n        .then((imageData) => {\n          const fileTransfer = FileTransfer.create();\n\n          fileTransfer\n            .upload(\n              imageData,\n              encodeURI(\"http://192.168.1.41:3013/uploadImage\"),\n              this.fileOptions\n            )\n            .then((data) => {\n              alert(data.response[\"pathIMG\"]);\n            });\n        })\n        .catch((err) => {\n          alert(err);\n        });\n    },\n  },\n  setup: function () {\n    return {\n      checkmarkCircleOutline,\n    };\n  },\n});\n</script>\n\n<style>\n@import \"../styles/style.css\";\n</style>"]}]}