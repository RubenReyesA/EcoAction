{"remainingRequest":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/InfoRecyclingPoints.vue?vue&type=style&index=0&id=6a4b7ef6&lang=css","dependencies":[{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/InfoRecyclingPoints.vue","mtime":1620130363241},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uL3N0eWxlcy9zdHlsZS5jc3MiOwpAaW1wb3J0ICJ+YW5pbWF0ZS5jc3MvYW5pbWF0ZS5taW4uY3NzIjsK"},{"version":3,"sources":["/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/InfoRecyclingPoints.vue"],"names":[],"mappings":";AAqUA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/components/InfoRecyclingPoints.vue","sourceRoot":"","sourcesContent":["<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <IonButtons>\n          <ion-back-button :text=\"messages[idioma]['backText']\" />\n        </IonButtons>\n        <ion-title>{{ messages[idioma][\"deixalleriesTitle\"] }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\" class=\"ion-padding\">\n      <ion-card>\n        <ion-card-content>\n          <ion-list>\n            <ion-item lines=\"none\">\n              <ion-label>{{ messages[idioma][\"gps\"] }}</ion-label>\n              <ion-toggle v-model=\"usedGPS\"></ion-toggle>\n            </ion-item>\n          </ion-list>\n        </ion-card-content>\n      </ion-card>\n\n      <ion-segment v-model=\"type\" id=\"segmentBar\">\n        <ion-segment-button value=\"list\">\n          <ion-label>{{ messages[idioma][\"list\"] }}</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"map\">\n          <ion-label>{{ messages[idioma][\"map\"] }}</ion-label>\n        </ion-segment-button>\n      </ion-segment>\n\n      <div\n        id=\"SList\"\n        style=\"display: block\"\n        class=\"animate__animated animate__fadeIn\"\n      >\n        <ion-toolbar>\n          <ion-searchbar\n            animated\n            :placeholder=\"messages[idioma]['S_D_placeholder']\"\n            inputmode=\"search\"\n            id=\"searchBar\"\n            v-model=\"inputText\"\n          ></ion-searchbar>\n        </ion-toolbar>\n\n        <ion-list>\n          <ion-item\n            button\n            @click=\"gotoDetails(point)\"\n            v-for=\"point in orderList(filteredItems)\"\n            :key=\"point[0]\"\n          >\n            <ion-label>{{ point[\"nom\"] }}</ion-label>\n            <ion-note v-if=\"usedGPS\" slot=\"end\">{{ point[\"km\"] }} km</ion-note>\n          </ion-item>\n        </ion-list>\n      </div>\n\n      <div\n        id=\"SMap\"\n        style=\"display: block\"\n        class=\"animate__animated animate__fadeIn\"\n      >\n        <div id=\"map\"></div>\n      </div>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonButtons,\n  IonBackButton,\n  IonCard,\n  IonCardContent,\n  IonSegment,\n  IonSegmentButton,\n  IonLabel,\n  IonSearchbar,\n  IonList,\n  IonItem,\n  IonNote,\n  IonToggle,\n} from \"@ionic/vue\";\nimport { defineComponent } from \"vue\";\n\nimport { Geolocation } from \"@ionic-native/geolocation\";\nimport { NativeStorage } from \"@ionic-native/native-storage\";\n\nimport EventBus from \"eventing-bus\";\nimport { useRouter } from \"vue-router\";\n\nimport * as L from \"leaflet\";\nimport * as L1 from \"leaflet.markercluster\";\n\nexport default defineComponent({\n  name: \"InfoRecyclingPoints\",\n  components: {\n    IonContent,\n    IonHeader,\n    IonPage,\n    IonTitle,\n    IonToolbar,\n    IonButtons,\n    IonBackButton,\n    IonCard,\n    IonCardContent,\n    IonSegment,\n    IonSegmentButton,\n    IonLabel,\n    IonSearchbar,\n    IonList,\n    IonItem,\n    IonNote,\n    IonToggle,\n  },\n  data: function () {\n    return {\n      messages: {\n        es: require(\"../../public/assets/i18n/es.json\"),\n        ca: require(\"../../public/assets/i18n/ca.json\"),\n        en: require(\"../../public/assets/i18n/en.json\"),\n      },\n      idioma: \"es\",\n      inputText: \"\",\n      usedGPS: false,\n      points: require(\"../../public/assets/deixalleries.json\"),\n      type: \"list\",\n      markers: null,\n      mapCenter: { lat: 41.3879, lng: 2.16992 },\n      map: null,\n      circle: null,\n    };\n  },\n  watch: {\n    usedGPS: function () {\n      if (this.usedGPS) {\n        this.lookPos();\n      } else {\n        this.mapCenter.lat = 41.3879;\n        this.mapCenter.lng = 2.16992;\n        this.map.setView([this.mapCenter.lat, this.mapCenter.lng], 12);\n        if (this.circle != null) {\n          this.map.removeLayer(this.circle);\n        }\n        this.orderList(this.filteredItems);\n      }\n    },\n    type: function () {\n      if (this.type == \"list\") {\n        document.getElementById(\"SList\").style.display = \"block\";\n        document.getElementById(\"SMap\").style.display = \"none\";\n      } else {\n        document.getElementById(\"SList\").style.display = \"none\";\n        document.getElementById(\"SMap\").style.display = \"block\";\n      }\n    },\n  },\n  methods: {\n    orderList: function (l) {\n      if (this.usedGPS) {\n        return l.sort((pA, pB) => {\n          return pB[\"km\"] < pA[\"km\"];\n        });\n      } else {\n        return l.sort((pA, pB) => {\n          return pA[\"id\"] > pB[\"id\"];\n        });\n      }\n    },\n    generateMarkers: function () {\n      this.markers = [];\n\n      for (let i = 0; i < this.points.length; i++) {\n        if (this.points[i][\"coords\"][0] != null) {\n          this.markers.push({\n            lat: this.points[i][\"coords\"][0],\n            lng: this.points[i][\"coords\"][1],\n            title: this.points[i][\"nom\"],\n            id: this.points[i][\"id\"],\n          });\n        }\n      }\n    },\n    lookPos: function () {\n      Geolocation.getCurrentPosition({ enableHighAccuracy: true })\n        .then((resp) => {\n          this.mapCenter.lat = resp.coords.latitude;\n          this.mapCenter.lng = resp.coords.longitude;\n          this.usedGPS = true;\n          this.map.setView([this.mapCenter.lat, this.mapCenter.lng], 12);\n\n          this.circle = L.circleMarker(\n            [this.mapCenter.lat, this.mapCenter.lng],\n            {\n              radius: 10,\n              color: \"#ffffff\",\n              weight: 2,\n              fillColor: \"#5384ED\",\n              fillOpacity: 0.8,\n            }\n          ).addTo(this.map);\n\n          const txt = `<h2 style=\"color: #5e9ca0; text-align: center;\">You're here!</h2>`;\n\n          this.circle.bindPopup(txt);\n\n          for (let i = 0; i < this.points.length; i++) {\n            if (this.points[i][\"coords\"][0] == null) {\n              this.points[i][\"km\"] = Number.POSITIVE_INFINITY;\n            } else {\n              this.points[i][\"km\"] = this.calculateDistance(\n                this.mapCenter.lng,\n                this.points[i][\"coords\"][1],\n                this.mapCenter.lat,\n                this.points[i][\"coords\"][0]\n              );\n            }\n          }\n\n          this.orderList(this.filteredItems);\n          console.log(resp);\n        })\n        .catch((err) => {\n          alert(\"GPS no disponible!\" + err.message);\n          this.usedGPS = false;\n        });\n    },\n    calculateDistance: function (lon1, lon2, lat1, lat2) {\n      const p = 0.017453292519943295;\n      const c = Math.cos;\n      const a =\n        0.5 -\n        c((lat1 - lat2) * p) / 2 +\n        (c(lat2 * p) * c(lat1 * p) * (1 - c((lon1 - lon2) * p))) / 2;\n      const dis = 12742 * Math.asin(Math.sqrt(a));\n      return Math.trunc(dis);\n    },\n    a: function (x) {\n      alert(x);\n    },\n  },\n  computed: {\n    filteredItems: function () {\n      return this.points.filter((item) => {\n        return (\n          item[\"nom\"]\n            .toLowerCase()\n            .normalize(\"NFD\")\n            .replace(/[\\u0300-\\u036f]/g, \"\")\n            .indexOf(\n              this.inputText\n                .toLowerCase()\n                .normalize(\"NFD\")\n                .replace(/[\\u0300-\\u036f]/g, \"\")\n            ) > -1\n        );\n      });\n    },\n  },\n  created: function () {\n    EventBus.on(\"openDetails\", (code) => {\n      this.gotoDetails({ id: code });\n    });\n  },\n  ionViewDidEnter() {\n    this.generateMarkers();\n\n    const mymap = L.map(\"map\").setView([41.3879, 2.16992], 12);\n\n    const attribution =\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n\n    const tileUrl = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n    const tiles = L.tileLayer(tileUrl, { attribution });\n\n    tiles.addTo(mymap);\n\n    window.sendCode = function (code) {\n      EventBus.publish(\"openDetails\", code);\n    };\n\n    const markers = new L1.MarkerClusterGroup();\n\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = L.marker([this.markers[i].lat, this.markers[i].lng]);\n      const txt = `<h2 onclick=\"sendCode(${this.markers[i].id})\" style=\"color: #5e9ca0; text-align: center;\">${this.markers[i].title}</h2>`;\n\n      marker.bindPopup(txt);\n      markers.addLayer(marker);\n    }\n\n    mymap.addLayer(markers);\n\n    mymap.invalidateSize();\n\n    this.map = mymap;\n    document.getElementById(\"SList\").style.display = \"block\";\n    document.getElementById(\"SMap\").style.display = \"none\";\n  },\n  mounted: function () {\n    NativeStorage.getItem(\"idioma\").then((x) => (this.idioma = x));\n  },\n  setup: function () {\n    const router = useRouter();\n\n    const gotoDetails = (p) => {\n      router.push({ name: \"deixalleria\", params: { deixalleriaNum: p[\"id\"] } });\n    };\n\n    return {\n      gotoDetails,\n    };\n  },\n});\n</script>\n\n<style>\n@import \"../styles/style.css\";\n@import \"~animate.css/animate.min.css\";\n</style>"]}]}