{"remainingRequest":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/views/HomeFragment.vue?vue&type=style&index=0&id=24181e09&scoped=true&lang=css","dependencies":[{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/views/HomeFragment.vue","mtime":1612259240134},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uL3N0eWxlcy9zdHlsZS5jc3MiOwpAaW1wb3J0ICIuLi9zdHlsZXMvZm9udFN0eWxlLmNzcyI7CkBpbXBvcnQgIi4uL3N0eWxlcy9jb2xvclN0eWxlLmNzcyI7Cg=="},{"version":3,"sources":["/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/views/HomeFragment.vue"],"names":[],"mappings":";AAuWA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Volumes/DATA SHARE/Trabajos 4t-UAB/TFG/Projecte/ecoAction/src/views/HomeFragment.vue","sourceRoot":"","sourcesContent":["<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title v-if=\"showUser\">Hola {{ user.name }}!</ion-title>\n        <ion-title v-if=\"!showUser\">EcoAction</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\" v-if=\"showUser\"\n            >Hola {{ user.name }}!</ion-title\n          >\n          <ion-title size=\"large\" v-if=\"!showUser\">Eco Action</ion-title>\n          <ion-buttons slot=\"end\">\n            <ion-button @click=\"updateInfoUser\">\n              <ion-icon\n                slot=\"icon-only\"\n                v-if=\"showUser\"\n                :icon=\"refreshCircle\"\n              ></ion-icon>\n            </ion-button>\n\n            <ion-button @click=\"logOut\">\n              <ion-icon\n                slot=\"icon-only\"\n                v-if=\"showUser\"\n                :icon=\"logIn\"\n              ></ion-icon>\n            </ion-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-header>\n\n      <div v-if=\"!showUser\"></div>\n\n      <div v-if=\"showUser\">\n        <ion-grid id=\"helloContainer\">\n          <ion-row>\n            <ion-col class=\"ion-no-padding\">\n              <div class=\"container\">\n                <p id=\"priceTitle\">Actualmente dispones de:</p>\n              </div>\n            </ion-col>\n          </ion-row>\n\n          <ion-row>\n            <ion-col class=\"ion-no-padding\">\n              <div class=\"container\">\n                <p id=\"priceValue\">{{ user.balance }} EA2C</p>\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n\n        <ion-grid>\n          <ion-row>\n            <ion-col class=\"ion-no-padding\">\n              <div class=\"container\">\n                <ion-segment v-model=\"mode\">\n                  <ion-segment-button value=\"day\">\n                    <ion-label>Today</ion-label>\n                  </ion-segment-button>\n                  <ion-segment-button value=\"week\">\n                    <ion-label>Last Week</ion-label>\n                  </ion-segment-button>\n                  <ion-segment-button value=\"month\">\n                    <ion-label>Last Month</ion-label>\n                  </ion-segment-button>\n                  <ion-segment-button value=\"year\">\n                    <ion-label>Last Year</ion-label>\n                  </ion-segment-button>\n                  <ion-segment-button value=\"all\">\n                    <ion-label>All</ion-label>\n                  </ion-segment-button>\n                </ion-segment>\n              </div>\n            </ion-col>\n          </ion-row>\n\n          <ion-row>\n            <ion-col>\n              {{ mode }}\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </div>\n\n      <!-- <LoginRegisterSession v-if=\"!showUser\" /> !-->\n\n      <div class=\"container2\" v-if=\"!showUser\" >\n        <img id=\"startImage\" src=\"../../public/assets/images/home.png\" />\n        <h1 id=\"startTitle\" class=\"useSora\">\n          {{ messages[idioma][\"startTitle\"] }}\n        </h1>\n\n        <div id=\"loginRegisterDiv\">\n          <ion-grid>\n            <ion-row>\n              <ion-col>\n                <ion-card\n                  class=\"btnCard3 ion-activatable\"\n                  @click=\"gotoLogin(controlLogin)\"\n                  color=\"cyan\">\n                  <ion-card-content>\n                    <ion-ripple-effect></ion-ripple-effect>\n                      <h1 class=\"btnLabels2 useLondrina\">{{ messages[idioma][\"loginTitle\"] }}</h1>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n              <ion-col>\n                <ion-card\n                  class=\"btnCard3 ion-activatable\"\n                  @click=\"gotoRegister\"\n                  color=\"cyan\">\n                  <ion-card-content>\n                    <ion-ripple-effect></ion-ripple-effect>\n                      <h1 class=\"btnLabels2 useLondrina\">{{ messages[idioma][\"registerTitle\"] }}</h1>\n                  </ion-card-content>\n                </ion-card>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </div>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonIcon,\n  IonButtons,\n  IonButton,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonSegment,\n  IonSegmentButton,\n  IonLabel,\n  loadingController,\n  IonCard,\n  IonCardContent,\n  IonRippleEffect,\n} from \"@ionic/vue\";\n\nimport { logIn, refreshCircle } from \"ionicons/icons\";\n\nimport axios from \"axios\";\nimport { NativeStorage } from \"@ionic-native/native-storage\";\n\nimport { useRouter } from \"vue-router\";\nimport { KeychainTouchId } from \"@ionic-native/keychain-touch-id\";\nimport sha256 from \"js-sha256\";\n\nimport { defineComponent } from \"vue\";\n\nimport EventBus from \"eventing-bus\";\n\nexport default defineComponent({\n  name: \"HomeFragment\",\n  components: {\n    IonPage,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonButton,\n    IonIcon,\n    IonButtons,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonSegment,\n    IonSegmentButton,\n    IonLabel,\n    IonCard,\n    IonCardContent,\n    IonRippleEffect,\n  },\n  data: function () {\n    return {\n      mode: \"day\",\n      showUser: true,\n      user: {\n        name: \"\",\n        balance: \"0\",\n      },\n      controlBalances: null,\n      controlLogin: null,\n      messages: {\n        es: require(\"../../public/assets/i18n/es.json\"),\n        ca: require(\"../../public/assets/i18n/ca.json\"),\n        en: require(\"../../public/assets/i18n/en.json\"),\n      },\n      idioma: \"es\",\n    };\n  },\n  created: function () {\n    this.checkLogin();\n    EventBus.on(\"hi\", this.checkLogin);\n  },\n  setup: function () {\n    const router = useRouter();\n\n    const gotoLogin = (c) => {\n      NativeStorage.getItem(\"loginPRO\")\n        .then((res) => {\n          KeychainTouchId.isAvailable()\n            .then(() => {\n              KeychainTouchId.verify(\"loginCredentials\", \"Use to login\")\n                .then((res2) => {\n                  loadingController\n                    .create({\n                      message: \"Iniciando sesión...\",\n                    })\n                    .then((loading) => {\n                      c = loading;\n                      loading.present();\n                      axios({\n                        url: \"http://192.168.1.41:3013/loginUser\",\n                        method: \"post\",\n                        headers: { Accept: \"application/json\" },\n                        data: {\n                          mail: res,\n                        },\n                      })\n                        .then((response) => {\n                          if (response.status == 200) {\n                            c.dismiss();\n                            if (sha256(res2) == response.data) {\n                              alert(\"Sesión iniciada correctamente\");\n\n                              axios({\n                                url:\n                                  \"http://192.168.1.41:3013/getUserName?mail=\" +\n                                  res,\n                                method: \"get\",\n                              }).then((response) => {\n                                NativeStorage.setItem(\"login\", response.data);\n                                EventBus.publish(\"hi\");\n                                EventBus.publish(\"checkBiometrics\");\n                              });\n\n                              axios({\n                                url:\n                                  \"http://192.168.1.41:3013/getTokenAddress?mail=\" +\n                                  res,\n                                method: \"get\",\n                              }).then((response) => {\n                                NativeStorage.setItem(\n                                  \"tokenAddress\",\n                                  response.data\n                                );\n                                //EventBus.publish(\"hi\");\n                              });\n                            } else {\n                              alert(\"Contraseña incorrecta!\");\n                            }\n                          } else {\n                            c.dismiss();\n                            alert(\n                              \"This mail is not registered in the system. Please register or use another mail\"\n                            );\n                            router.push(\"/main/home/login\");\n                          }\n                        })\n                        .catch((err) => {\n                          c.dismiss();\n                          alert(\"Se ha producido un error: \" + err);\n                          router.push(\"/main/home/login\");\n                        });\n                    });\n                })\n                .catch((err2) => {\n                  alert(\"Error keychain: \" + err2);\n                  router.push(\"/main/home/login\");\n                });\n            })\n            .catch((err) => {\n              alert(\"Error: \" + err);\n              router.push(\"/main/home/login\");\n            });\n        })\n        .catch(() => {\n          router.push(\"/main/home/login\");\n        });\n    };\n\n    const gotoRegister = () => {\n      router.push(\"/main/home/register\");\n    };\n\n    return {\n      logIn,\n      refreshCircle,\n      gotoLogin,\n      gotoRegister,\n    };\n  },\n  methods: {\n    getBalances: function () {\n      const addr = \"0x2951684B0A8DD4b655bF5924be9e351f3d3360e2\";\n      axios({\n        url: \"http://192.168.1.41:3013/getBalance?tokenAddress=\" + addr,\n        method: \"get\",\n      }).then((response) => {\n        loadingController\n          .create({\n            message: \"Cargando saldo...\",\n          })\n          .then((loading) => {\n            this.controlBalances = loading;\n            loading.present();\n            setTimeout(() => {\n              this.user.balance = response.data + \"\";\n              this.controlBalances.dismiss();\n            }, 1000);\n          });\n      });\n    },\n    checkLogin: function () {\n      NativeStorage.getItem(\"login\")\n        .then((res) => {\n          this.user.name = res;\n          this.showUser = true;\n          this.updateInfoUser();\n        })\n        .catch(() => {\n          this.showUser = false;\n          this.user = {\n            name: \"\",\n            balance: \"0\",\n          };\n        });\n    },\n    logOut: function () {\n      NativeStorage.remove(\"login\");\n      alert(\"Sesión cerrada correctamente\");\n      this.checkLogin();\n    },\n    updateInfoUser: function () {\n      this.getBalances();\n    },\n  },\n  mounted: function () {\n    NativeStorage.getItem(\"idioma\").then((x) => (this.idioma = x));\n  },\n});\n</script>\n\n<style scoped>\n@import \"../styles/style.css\";\n@import \"../styles/fontStyle.css\";\n@import \"../styles/colorStyle.css\";\n</style>"]}]}