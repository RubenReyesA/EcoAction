{"remainingRequest":"/Users/ruben107/Documents/Alfa/ecoAction/node_modules/babel-loader/lib/index.js!/Users/ruben107/Documents/Alfa/ecoAction/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ruben107/Documents/Alfa/ecoAction/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ruben107/Documents/Alfa/ecoAction/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ruben107/Documents/Alfa/ecoAction/src/components/GMap.vue?vue&type=template&id=36c7e925&scoped=true","dependencies":[{"path":"/Users/ruben107/Documents/Alfa/ecoAction/src/components/GMap.vue","mtime":1611911653832},{"path":"/Users/ruben107/Documents/Alfa/ecoAction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ruben107/Documents/Alfa/ecoAction/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ruben107/Documents/Alfa/ecoAction/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ruben107/Documents/Alfa/ecoAction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ruben107/Documents/Alfa/ecoAction/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi0zNmM3ZTkyNSIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMzZjN2U5MjUiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGlkOiAibWFwIiwKICByZWY6ICJtYXBEaXZSZWYiCn07CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKTsKfSk7"},{"version":3,"sources":["/Users/ruben107/Documents/Alfa/ecoAction/src/components/GMap.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,EAAE,EAAC,K;AAAM,EAAA,GAAG,EAAC;;;;;;uBAAlB,YAAA,CAAoC,KAApC,EAAA,UAAA,EAAoC,IAApC,EAAoC;AAAA;AAApC,G","sourcesContent":["<template>\n  <div id=\"map\" ref=\"mapDivRef\"></div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\n\nimport EventBus from \"eventing-bus\";\n\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\n\nexport default {\n  name: \"GMap\",\n  props: {\n    center: { lat: Number, lng: Number },\n    markers: Array,\n    zoom: Number,\n    mapType: String,\n    disableUI: Boolean,\n  },\n  created: function () {\n    EventBus.on(\"markersUpdate\", this.checkMyMarker);\n  },\n  methods: {\n    checkMyMarker: function () {\n      console.log(33);\n      window.createMyMarker();\n    },\n  },\n  setup(props) {\n    //const map = ref(null);\n    const mapDivRef = ref(null);\n\n    let mapeo = null;\n\n    onMounted(() => {\n      //const key = \"AIzaSyCX6DY6Q0JYgekyFRtC0r7mrkDDXtxxcSU\";\n      const key = \"\";\n\n      // create the script element to load\n      const googleMapScript = document.createElement(\"SCRIPT\");\n      googleMapScript.setAttribute(\n        \"src\",\n        `https://maps.googleapis.com/maps/api/js?key=${key}&callback=initMap`\n      );\n      googleMapScript.setAttribute(\"defer\", \"\");\n      googleMapScript.setAttribute(\"async\", \"\");\n      document.head.appendChild(googleMapScript);\n\n    });\n\n    const markersList = [];\n    let myMarker = null;\n\n    window.createMyMarker = () => {\n      if (myMarker != null) {\n        myMarker.setMap(null);\n      }\n\n      myMarker = new window.google.maps.Marker({\n        position: new window.google.maps.LatLng(\n          props.center.lat,\n          props.center.lng\n        ),\n        map: mapeo,\n        icon: {\n          path: window.google.maps.SymbolPath.CIRCLE,\n          scale: 10,\n          fillOpacity: 1,\n          strokeWeight: 2,\n          fillColor: \"#5384ED\",\n          strokeColor: \"#ffffff\",\n        },\n      });\n    };\n\n    window.initMap = () => {\n      mapeo = new window.google.maps.Map(mapDivRef.value, {\n        mapTypeId: props.mapType,\n        zoom: props.zoom,\n        disableDefaultUI: props.disableUI,\n        center: props.center,\n      });\n\n      window.a = function (code) {\n        EventBus.publish('openDetails', code);\n      };\n\n      window.createMyMarker();\n\n      props.markers.forEach((markerInfo) => {\n        const mapMarker = new window.google.maps.Marker({\n          position: new window.google.maps.LatLng(\n            markerInfo.lat,\n            markerInfo.lng\n          ),\n          map: mapeo,\n          title: markerInfo.title,\n        });\n\n        mapMarker.infoWindow = new window.google.maps.InfoWindow({\n          content: `<h2 onclick=\"a('${markerInfo.title}')\" style=\"color: #5e9ca0; text-align: center;\">${markerInfo.title}</h2>`,\n        });\n\n        markersList.push(mapMarker);\n      });\n\n      markersList.forEach((m) => {\n        m.addListener(\"click\", () => {\n          if (m.infoWindow != null) {\n            m.infoWindow.open(mapeo, m);\n          }\n        });\n      });\n\n      \n      new MarkerClusterer(\n        mapeo,\n        markersList,\n        {\n          imagePath:\n            \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\n        }\n      );\n      \n    };\n\n    return {\n      mapDivRef,\n      markersList,\n      mapeo\n    };\n  },\n};\n</script>\n\n<style lang=\"css\" scoped>\n#map {\n  width: 100%;\n  height: 57vh;\n  background-color: azure;\n}\n</style>"],"sourceRoot":""}]}